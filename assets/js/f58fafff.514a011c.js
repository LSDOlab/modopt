"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6788],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),a=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=a(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=a(n),f=o,d=m["".concat(u,".").concat(f)]||m[f]||p[f]||i;return n?r.createElement(d,l(l({ref:t},c),{},{components:n})):r.createElement(d,l({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var a=2;a<i;a++)l[a]=n[a];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},624:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return a},toc:function(){return c},default:function(){return m}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),l=["components"],s={},u="Sum",a={unversionedId:"std_lib_ref/sum",id:"std_lib_ref/sum",isDocsHomePage:!1,title:"Sum",description:"This function allows you to compute the sum of vectors, matrices, and tensors.",source:"@site/docs/std_lib_ref/sum.mdx",sourceDirName:"std_lib_ref",slug:"/std_lib_ref/sum",permalink:"/modopt/docs/std_lib_ref/sum",editUrl:"https://github.com/lsdolab/modopt/edit/main/website/docs/std_lib_ref/sum.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Minimum",permalink:"/modopt/docs/std_lib_ref/min"},next:{title:"Trigonometric Functions",permalink:"/modopt/docs/std_lib_ref/trigonometric_functions"}},c=[{value:"Single Inputs",id:"single-inputs",children:[]},{value:"Multiple Inputs",id:"multiple-inputs",children:[]},{value:"Along an Axis",id:"along-an-axis",children:[]}],p={toc:c};function m(e){var t=e.components,n=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sum"},"Sum"),(0,i.kt)("p",null,"This function allows you to compute the sum of vectors, matrices, and tensors."),(0,i.kt)("p",null,".. autofunction:: csdl.std.sum.sum"),(0,i.kt)("p",null,"Examples for all the possible use cases are provided below."),(0,i.kt)("h2",{id:"single-inputs"},"Single Inputs"),(0,i.kt)("p",null,".. toctree::\n:maxdepth: 1\n:titlesonly:"),(0,i.kt)("p",null,"   ex_sum_single_vector.rst\nex_sum_single_matrix.rst\nex_sum_single_tensor.rst"),(0,i.kt)("h2",{id:"multiple-inputs"},"Multiple Inputs"),(0,i.kt)("p",null,".. toctree::\n:maxdepth: 1\n:titlesonly:"),(0,i.kt)("p",null,"   ex_sum_multiple_vector.rst\nex_sum_multiple_matrix.rst\nex_sum_multiple_tensor.rst"),(0,i.kt)("h2",{id:"along-an-axis"},"Along an Axis"),(0,i.kt)("p",null,".. toctree::\n:maxdepth: 1\n:titlesonly:"),(0,i.kt)("p",null,"   ex_sum_single_matrix_along0.rst\nex_sum_single_matrix_along1.rst"),(0,i.kt)("p",null,"   ex_sum_multiple_matrix_along0.rst\nex_sum_multiple_matrix_along1.rst"))}m.isMDXComponent=!0}}]);