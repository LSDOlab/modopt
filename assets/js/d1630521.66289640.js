"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8870],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return _}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),m=l(t),_=o,d=m["".concat(u,".").concat(_)]||m[_]||p[_]||i;return t?r.createElement(d,s(s({ref:n},c),{},{components:t})):r.createElement(d,s({ref:n},c))}));function _(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,s=new Array(i);s[0]=m;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var l=2;l<i;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7561:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),s=["components"],a={},u="Einstein Summation New API",l={unversionedId:"std_lib_ref/Linear Algebra/einsum_new",id:"std_lib_ref/Linear Algebra/einsum_new",isDocsHomePage:!1,title:"Einstein Summation New API",description:"This is evaluates the einstein summation on the operands.",source:"@site/docs/std_lib_ref/Linear Algebra/einsum_new.mdx",sourceDirName:"std_lib_ref/Linear Algebra",slug:"/std_lib_ref/Linear Algebra/einsum_new",permalink:"/modopt/docs/std_lib_ref/Linear Algebra/einsum_new",editUrl:"https://github.com/lsdolab/modopt/edit/main/website/docs/std_lib_ref/Linear Algebra/einsum_new.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Reshape",permalink:"/modopt/docs/std_lib_ref/Array Operations/reshape"},next:{title:"Einstein Summation Numpy API",permalink:"/modopt/docs/std_lib_ref/Linear Algebra/einsum_old"}},c=[{value:"Inner Products",id:"inner-products",children:[]},{value:"Outer Products",id:"outer-products",children:[]},{value:"Reorder Operations",id:"reorder-operations",children:[]},{value:"Summation Operations",id:"summation-operations",children:[]},{value:"Special Operations",id:"special-operations",children:[]}],p={toc:c};function m(e){var n=e.components,t=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"einstein-summation-new-api"},"Einstein Summation New API"),(0,i.kt)("p",null,"This is evaluates the einstein summation on the operands.\nIt is analogous to numpy.einsum, and uses the same notation."),(0,i.kt)("p",null,"Examples for all the possible use cases are provided below."),(0,i.kt)("p",null,".. autofunction:: csdl.std.einsum_new_api.einsum_new_api"),(0,i.kt)("h2",{id:"inner-products"},"Inner Products"),(0,i.kt)("p",null,".. toctree::\n:maxdepth: 1\n:titlesonly:"),(0,i.kt)("p",null,"   ex_einsum_new_inner_vector_vector.rst\nex_einsum_new_inner_vector_vector_sparse.rst\nex_einsum_new_inner_tensor_vector.rst\nex_einsum_new_inner_tensor_vector_sparse.rst"),(0,i.kt)("h2",{id:"outer-products"},"Outer Products"),(0,i.kt)("p",null,".. toctree::\n:maxdepth: 1\n:titlesonly:"),(0,i.kt)("p",null,"   ex_einsum_new_outer_vector_vector.rst\nex_einsum_new_outer_vector_vector_sparse.rst\nex_einsum_new_outer_tensor_vector.rst\nex_einsum_new_outer_tensor_vector_sparse.rst"),(0,i.kt)("h2",{id:"reorder-operations"},"Reorder Operations"),(0,i.kt)("p",null,".. toctree::\n:maxdepth: 1\n:titlesonly:"),(0,i.kt)("p",null,"   ex_einsum_new_reorder_matrix.rst\nex_einsum_new_reorder_matrix_sparse.rst\nex_einsum_new_reorder_tensor.rst\nex_einsum_new_reorder_tensor_sparse.rst"),(0,i.kt)("h2",{id:"summation-operations"},"Summation Operations"),(0,i.kt)("p",null,".. toctree::\n:maxdepth: 1\n:titlesonly:"),(0,i.kt)("p",null,"   ex_einsum_new_vector_summation.rst\nex_einsum_new_vector_summation_sparse.rst\nex_einsum_new_tensor_summation.rst\nex_einsum_new_tensor_summation_sparse.rst"),(0,i.kt)("h2",{id:"special-operations"},"Special Operations"),(0,i.kt)("p",null,".. toctree::\n:maxdepth: 1\n:titlesonly:"),(0,i.kt)("p",null,"   ex_einsum_new_multiple_vector_summation.rst\nex_einsum_new_multiple_vector_summation_sparse.rst"))}m.isMDXComponent=!0}}]);